@page "/fetchdata"
@using SSBApp.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
	<TelerikGrid Data=@forecasts Height="400px">
		<GridColumns>
			<GridColumn Field="Date">
				<Template>
					@((context as WeatherForecast).Date.ToString("MMMM dd, yyyy"))
				</Template>
			</GridColumn>
			<GridColumn Field="TemperatureC" Title="Temp. C" />
			<GridColumn Field="Summary" />
		</GridColumns>
	</TelerikGrid>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
	List<WeatherForecast> forecasts { get; set; } = new List<WeatherForecast>();

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}


@code {
	void Test() {
		System.Collections.ObjectModel.ObservableCollection<string> col = new System.Collections.ObjectModel.ObservableCollection<string>();
		
	}
}